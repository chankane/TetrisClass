@startuml
class Mino {
+Mino(colors: string[][])
+getColors(): string[][]
+rotateR(): void
+rotateL(): void
-colors: string[][]
}

class Board {
+Board(canvas: Canvas, blockSize: int)
+getMino(): Mino
+setMino(Mino: mino): void
+disp(): void
-blockSize: int
-mino: Mino = null
}

interface KeyListener {
+hardDrop(): void
+softDrop(): void
+moveLeft(): void
+moveRight(): void
+rotateLeft(): void
+rotateRight(): void
+hold(): void
}

class MainBoard extends Board implements KeyListener {
-{static}WIDTH = 10
-{static}HEIGHT = 20
+MainBoard(canvas: Canvas, blockSize: int, holdBoard: Board, nextBoard: Board)
+disp(): void
-startDropping(): void
-hold(): Mino
-drop(): void
-minoX: int
-minoY: int
-colors: string[][]
-holdBoard: Board
-nextBoard: Board
}

class MinoFactory {
+create(): Mino
}

enum BlockSize {
LARGE: int = 20
MEDIUM: int = 20
SMALL: int = 20
}

enum Color {
EMPTY: 'lightgray',
I: string = 'cyan',
O: string = 'yellow',
S: string = 'lime',
Z: string = 'red',
J: string = 'blue',
L: string = 'orange',
T: string = 'magenta',
}
@enduml
